/*
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const msRest = require('ms-rest');
const WebResource = msRest.WebResource;

/**
 * @summary API Heartbeat Monitoring
 *
 * Endpoint used for Heartbeat Monitoring. Monitoring will use this endpoint to
 * check if the API is up and available.
 *
 * @param {string} aPIKey Client API Key
 *
 * @param {string} swaggerJSONurl Url path to swagger.json file
 *
 * @param {string} language Development language to generate SDK for. Possible
 * values include: 'csharp', 'go', 'java', 'nodejs', 'python', 'ruby'
 *
 * @param {string} namespace User selected namespace
 *
 * @param {object} [options] Optional Parameters.
 *
 * @param {object} [options.customHeaders] Headers that will be added to the
 * request
 *
 * @param {function} callback - The callback.
 *
 * @returns {function} callback(err, result, request, response)
 *
 *                      {Error}  err        - The Error object if an error occurred, null otherwise.
 *
 *                      {null} [result]   - The deserialized result object if an error did not occur.
 *
 *                      {object} [request]  - The HTTP Request object if an error did not occur.
 *
 *                      {stream} [response] - The HTTP Response stream if an error did not occur.
 */
function _keySwaggerjsonurlLanguageNamespace(aPIKey, swaggerJSONurl, language, namespace, options, callback) {
   /* jshint validthis: true */
  let client = this.client;
  if(!callback && typeof options === 'function') {
    callback = options;
    options = null;
  }
  if (!callback) {
    throw new Error('callback cannot be null.');
  }
  // Validate
  try {
    if (aPIKey === null || aPIKey === undefined || typeof aPIKey.valueOf() !== 'string') {
      throw new Error('aPIKey cannot be null or undefined and it must be of type string.');
    }
    if (swaggerJSONurl === null || swaggerJSONurl === undefined || typeof swaggerJSONurl.valueOf() !== 'string') {
      throw new Error('swaggerJSONurl cannot be null or undefined and it must be of type string.');
    }
    if (language === null || language === undefined || typeof language.valueOf() !== 'string') {
      throw new Error('language cannot be null or undefined and it must be of type string.');
    }
    if (namespace === null || namespace === undefined || typeof namespace.valueOf() !== 'string') {
      throw new Error('namespace cannot be null or undefined and it must be of type string.');
    }
  } catch (error) {
    return callback(error);
  }

  // Construct URL
  let baseUrl = this.client.baseUri;
  let requestUrl = baseUrl + (baseUrl.endsWith('/') ? '' : '/') + 'System/GenerateSDK/{API_Key}/{swaggerJSONurl}/{language}/{namespace}';
  requestUrl = requestUrl.replace('{API_Key}', encodeURIComponent(aPIKey));
  requestUrl = requestUrl.replace('{swaggerJSONurl}', encodeURIComponent(swaggerJSONurl));
  requestUrl = requestUrl.replace('{language}', encodeURIComponent(language));
  requestUrl = requestUrl.replace('{namespace}', encodeURIComponent(namespace));

  // Create HTTP transport objects
  let httpRequest = new WebResource();
  httpRequest.method = 'GET';
  httpRequest.headers = {};
  httpRequest.url = requestUrl;
  // Set Headers
  if(options) {
    for(let headerName in options['customHeaders']) {
      if (options['customHeaders'].hasOwnProperty(headerName)) {
        httpRequest.headers[headerName] = options['customHeaders'][headerName];
      }
    }
  }
  httpRequest.headers['Content-Type'] = 'application/json; charset=utf-8';
  httpRequest.body = null;
  // Send Request
  return client.pipeline(httpRequest, (err, response, responseBody) => {
    if (err) {
      return callback(err);
    }
    let statusCode = response.statusCode;
    if (statusCode < 200 || statusCode >= 300) {
      let error = new Error(responseBody);
      error.statusCode = response.statusCode;
      error.request = msRest.stripRequest(httpRequest);
      error.response = msRest.stripResponse(response);
      if (responseBody === '') responseBody = null;
      let parsedErrorResponse;
      try {
        parsedErrorResponse = JSON.parse(responseBody);
        if (parsedErrorResponse) {
          let internalError = null;
          if (parsedErrorResponse.error) internalError = parsedErrorResponse.error;
          error.code = internalError ? internalError.code : parsedErrorResponse.code;
          error.message = internalError ? internalError.message : parsedErrorResponse.message;
        }
      } catch (defaultError) {
        error.message = `Error "${defaultError.message}" occurred in deserializing the responseBody ` +
                         `- "${responseBody}" for the default response.`;
        return callback(error);
      }
      return callback(error);
    }
    // Create Result
    let result = null;
    if (responseBody === '') responseBody = null;

    return callback(null, result, httpRequest, response);
  });
}

/**
 * @class
 * GetSystemGeneratesdkApi
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the MASTERTEMPLATE.
 * Initializes a new instance of the GetSystemGeneratesdkApi class.
 * @constructor
 *
 * @param {MASTERTEMPLATE} client Reference to the service client.
 */
class GetSystemGeneratesdkApi {
  constructor(client) {
    this.client = client;
    this._keySwaggerjsonurlLanguageNamespace = _keySwaggerjsonurlLanguageNamespace;
  }

  /**
   * @summary API Heartbeat Monitoring
   *
   * Endpoint used for Heartbeat Monitoring. Monitoring will use this endpoint to
   * check if the API is up and available.
   *
   * @param {string} aPIKey Client API Key
   *
   * @param {string} swaggerJSONurl Url path to swagger.json file
   *
   * @param {string} language Development language to generate SDK for. Possible
   * values include: 'csharp', 'go', 'java', 'nodejs', 'python', 'ruby'
   *
   * @param {string} namespace User selected namespace
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<null>} - The deserialized result object.
   *
   * @reject {Error} - The error object.
   */
  keySwaggerjsonurlLanguageNamespaceWithHttpOperationResponse(aPIKey, swaggerJSONurl, language, namespace, options) {
    let client = this.client;
    let self = this;
    return new Promise((resolve, reject) => {
      self._keySwaggerjsonurlLanguageNamespace(aPIKey, swaggerJSONurl, language, namespace, options, (err, result, request, response) => {
        let httpOperationResponse = new msRest.HttpOperationResponse(request, response);
        httpOperationResponse.body = result;
        if (err) { reject(err); }
        else { resolve(httpOperationResponse); }
        return;
      });
    });
  }

  /**
   * @summary API Heartbeat Monitoring
   *
   * Endpoint used for Heartbeat Monitoring. Monitoring will use this endpoint to
   * check if the API is up and available.
   *
   * @param {string} aPIKey Client API Key
   *
   * @param {string} swaggerJSONurl Url path to swagger.json file
   *
   * @param {string} language Development language to generate SDK for. Possible
   * values include: 'csharp', 'go', 'java', 'nodejs', 'python', 'ruby'
   *
   * @param {string} namespace User selected namespace
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {function} [optionalCallback] - The optional callback.
   *
   * @returns {function|Promise} If a callback was passed as the last parameter
   * then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned
   *
   *                      @resolve {null} - The deserialized result object.
   *
   *                      @reject {Error} - The error object.
   *
   * {function} optionalCallback(err, result, request, response)
   *
   *                      {Error}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {null} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {object} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {stream} [response] - The HTTP Response stream if an error did not occur.
   */
  keySwaggerjsonurlLanguageNamespace(aPIKey, swaggerJSONurl, language, namespace, options, optionalCallback) {
    let client = this.client;
    let self = this;
    if (!optionalCallback && typeof options === 'function') {
      optionalCallback = options;
      options = null;
    }
    if (!optionalCallback) {
      return new Promise((resolve, reject) => {
        self._keySwaggerjsonurlLanguageNamespace(aPIKey, swaggerJSONurl, language, namespace, options, (err, result, request, response) => {
          if (err) { reject(err); }
          else { resolve(result); }
          return;
        });
      });
    } else {
      return self._keySwaggerjsonurlLanguageNamespace(aPIKey, swaggerJSONurl, language, namespace, options, optionalCallback);
    }
  }

}

module.exports = GetSystemGeneratesdkApi;
