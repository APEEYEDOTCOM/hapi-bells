/**
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package silica;

import com.microsoft.rest.RestException;
import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import java.io.IOException;
import rx.Observable;

/**
 * An instance of this class provides access to all the operations defined
 * in GetSystemGeneratesdkApis.
 */
public interface GetSystemGeneratesdkApis {
    /**
     * API Heartbeat Monitoring.
     * Endpoint used for Heartbeat Monitoring. Monitoring will use this endpoint to check if the API is up and available.
     *
     * @param aPIKey Client API Key
     * @param swaggerJSONurl Url path to swagger.json file
     * @param language Development language to generate SDK for. Possible values include: 'csharp', 'go', 'java', 'nodejs', 'python', 'ruby'
     * @param namespace User selected namespace
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws RestException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     */
    void keySwaggerjsonurlLanguageNamespace(String aPIKey, String swaggerJSONurl, String language, String namespace);

    /**
     * API Heartbeat Monitoring.
     * Endpoint used for Heartbeat Monitoring. Monitoring will use this endpoint to check if the API is up and available.
     *
     * @param aPIKey Client API Key
     * @param swaggerJSONurl Url path to swagger.json file
     * @param language Development language to generate SDK for. Possible values include: 'csharp', 'go', 'java', 'nodejs', 'python', 'ruby'
     * @param namespace User selected namespace
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<Void> keySwaggerjsonurlLanguageNamespaceAsync(String aPIKey, String swaggerJSONurl, String language, String namespace, final ServiceCallback<Void> serviceCallback);

    /**
     * API Heartbeat Monitoring.
     * Endpoint used for Heartbeat Monitoring. Monitoring will use this endpoint to check if the API is up and available.
     *
     * @param aPIKey Client API Key
     * @param swaggerJSONurl Url path to swagger.json file
     * @param language Development language to generate SDK for. Possible values include: 'csharp', 'go', 'java', 'nodejs', 'python', 'ruby'
     * @param namespace User selected namespace
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceResponse} object if successful.
     */
    Observable<Void> keySwaggerjsonurlLanguageNamespaceAsync(String aPIKey, String swaggerJSONurl, String language, String namespace);

    /**
     * API Heartbeat Monitoring.
     * Endpoint used for Heartbeat Monitoring. Monitoring will use this endpoint to check if the API is up and available.
     *
     * @param aPIKey Client API Key
     * @param swaggerJSONurl Url path to swagger.json file
     * @param language Development language to generate SDK for. Possible values include: 'csharp', 'go', 'java', 'nodejs', 'python', 'ruby'
     * @param namespace User selected namespace
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceResponse} object if successful.
     */
    Observable<ServiceResponse<Void>> keySwaggerjsonurlLanguageNamespaceWithServiceResponseAsync(String aPIKey, String swaggerJSONurl, String language, String namespace);

}
